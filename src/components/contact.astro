<section id="contact" class="w-full py-12 border-t border-[#ffffff10]">
  <div class="max-w-5xl mx-auto">
    <h2 class="text-lg text-[var(--sec)] mb-2 shiny-sec">Let's talk</h2>
    <h3 class="text-4xl md:text-5xl font-medium text-[var(--white)] mb-6">Contact</h3>
    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      <div class="text-[var(--white-icon)]">
        <p class="mb-4">
          Have a question or a project in mind? Feel free to reach out.
        </p>
        <div class="flex items-center gap-2">
          <span>Location:</span>
          <span class="text-[var(--white)]">Indonesia, Bekasi</span>
        </div>
      </div>

      <div>
        <form id="contact-form" class="flex flex-col gap-4">
          <input
            type="text"
            name="from_name"
            placeholder="Name"
            required
            class="px-4 py-2 bg-[#1414149c] text-[var(--white)] border border-[var(--white-icon-tr)] rounded-lg focus:outline-none focus:ring-2 focus:ring-[var(--sec)]"
          />
          <input
            type="email"
            name="reply_to"
            placeholder="Email"
            required
            class="px-4 py-2 bg-[#1414149c] text-[var(--white)] border border-[var(--white-icon-tr)] rounded-lg focus:outline-none focus:ring-2 focus:ring-[var(--sec)]"
          />
          <textarea
            name="message"
            placeholder="Message"
            rows="6"
            required
            class="px-4 py-2 bg-[#1414149c] text-[var(--white)] border border-[var(--white-icon-tr)] rounded-lg focus:outline-none focus:ring-2 focus:ring-[var(--sec)] resize-none"
          ></textarea>
          <button
            type="submit"
            class="px-4 py-2 bg-[var(--white-icon-tr)] text-[var(--white)] rounded-lg opacity-60 transition-opacity border border-[var(--white-icon-tr)] hover:opacity-100 hover:bg-[var(--white-icon-tr)]"
          >
            Submit
          </button>
        </form>
        <div
          id="form-message"
          class="hidden justify-center items-center mt-4 text-[var(--white)] text-lg"
        >
          âœ… Thank you for your message!
        </div>
      </div>
    </div>
  </div>
</section>

<!-- Firebase Script -->
<script type="module" is:inline>
  import { initializeApp } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-app.js";
  import { getFirestore, collection, addDoc, serverTimestamp } from "https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js";

  const firebaseConfig = {
  apiKey: "AIzaSyB--y3YzQNC16kuuOIVaGCRZN131CRibGU",
  authDomain: "portofolio-ae6fa.firebaseapp.com",
  projectId: "portofolio-ae6fa",
  storageBucket: "portofolio-ae6fa.firebasestorage.app",
  messagingSenderId: "241224128710",
  appId: "1:241224128710:web:6e919c520dcf0220131fc7",
  measurementId: "G-N7QH2JGS0Q"
};

  const app = initializeApp(firebaseConfig);
  const db = getFirestore(app);

  const form = document.getElementById("contact-form");
  const formMessage = document.getElementById("form-message");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    const from_name = form.from_name.value.trim();
    const reply_to = form.reply_to.value.trim();
    const message = form.message.value.trim();

    if (!from_name || !reply_to || !message) {
      alert("Please fill in all fields.");
      return;
    }

    try {
      await addDoc(collection(db, "contacts"), {
        from_name,
        reply_to,
        message,
        created_at: serverTimestamp(),
      });

      form.reset();
      form.style.display = "none";
      formMessage.classList.remove("hidden");
    } catch (error) {
      console.error("Error saving to Firestore:", error);
      alert("Failed to send message.");
    }
  });
</script>


<script type="module" is:inline>
  const form = document.getElementById("contact-form");
  const formMessage = document.getElementById("form-message");

  form.addEventListener("submit", async (e) => {
    e.preventDefault();
    const formData = new FormData(form);

    try {
      const response = await fetch(form.action, {
        method: "POST",
        body: formData,
        headers: { Accept: "application/json" },
      });
      if (response.ok) {
        form.reset();
        form.style.display = "none";
        formMessage.classList.remove("hidden");
      } else {
        const data = await response.json();
        console.error("Error response:", data);
        alert("There was a problem sending your message.");
      }
    } catch (error) {
      console.error("Error:", error);
      alert("There was a problem sending your message.");
    }
  });
</script>
